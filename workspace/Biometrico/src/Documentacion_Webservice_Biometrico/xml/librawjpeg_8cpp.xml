<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="librawjpeg_8cpp" kind="file" language="C++">
    <compoundname>librawjpeg.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">iostream</includes>
    <includes local="no">jpeglib.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="110">
        <label>stdlib.h</label>
      </node>
      <node id="109">
        <label>jpeglib.h</label>
      </node>
      <node id="106">
        <label>string.h</label>
      </node>
      <node id="107">
        <label>cstdlib</label>
      </node>
      <node id="108">
        <label>iostream</label>
      </node>
      <node id="105">
        <label>stdio.h</label>
      </node>
      <node id="104">
        <label>TemplateAFIS_webservice_lib/include/librawjpeg.cpp</label>
        <link refid="librawjpeg_8cpp"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="librawjpeg_8cpp_1aa0a06e9ee4ca87dd830202258e34ba63" prot="public" static="no" mutable="no">
        <type>unsigned char *</type>
        <definition>unsigned char* raw_image</definition>
        <argsstring></argsstring>
        <name>raw_image</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" line="25" column="1" bodyfile="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" bodystart="25" bodyend="-1"/>
        <referencedby refid="librawjpeg_8cpp_1a6389da5254621aa41a0ea72e8367a44d" compoundref="librawjpeg_8cpp" startline="43" endline="96">read_jpeg_file</referencedby>
        <referencedby refid="librawjpeg_8cpp_1a0465dd33dca19c866b036b857dd1ccad" compoundref="librawjpeg_8cpp" startline="108" endline="147">write_jpeg_file</referencedby>
      </memberdef>
      <memberdef kind="variable" id="librawjpeg_8cpp_1a2474a5474cbff19523a51eb1de01cda4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <initializer>= 260</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" line="28" column="1" bodyfile="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" bodystart="28" bodyend="-1"/>
        <referencedby refid="librawjpeg_8cpp_1a0465dd33dca19c866b036b857dd1ccad" compoundref="librawjpeg_8cpp" startline="108" endline="147">write_jpeg_file</referencedby>
      </memberdef>
      <memberdef kind="variable" id="librawjpeg_8cpp_1ad12fc34ce789bce6c8a05d8a17138534" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <initializer>= 340</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" line="29" column="1" bodyfile="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" bodystart="29" bodyend="-1"/>
        <referencedby refid="librawjpeg_8cpp_1a0465dd33dca19c866b036b857dd1ccad" compoundref="librawjpeg_8cpp" startline="108" endline="147">write_jpeg_file</referencedby>
      </memberdef>
      <memberdef kind="variable" id="librawjpeg_8cpp_1ad1fad3c6fec2bf6f7d7933e68b4b0de5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int bytes_per_pixel</definition>
        <argsstring></argsstring>
        <name>bytes_per_pixel</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" line="30" column="1" bodyfile="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" bodystart="30" bodyend="-1"/>
        <referencedby refid="librawjpeg_8cpp_1a89717143fcd881e495a3afdb70763ab0" compoundref="librawjpeg_8cpp" startline="158" endline="197">convert_raw_jpeg</referencedby>
        <referencedby refid="classTemplateAFIS__webservice_1a32fefd35ad3d702984aa442f4407515d" compoundref="TemplateAFIS_8cpp" startline="92" endline="133">TemplateAFIS_webservice::convert_raw_jpeg</referencedby>
        <referencedby refid="librawjpeg_8cpp_1a0465dd33dca19c866b036b857dd1ccad" compoundref="librawjpeg_8cpp" startline="108" endline="147">write_jpeg_file</referencedby>
      </memberdef>
      <memberdef kind="variable" id="librawjpeg_8cpp_1a853aaff670a934d0e6fcf7ab4fda6c7c" prot="public" static="no" mutable="no">
        <type>J_COLOR_SPACE</type>
        <definition>J_COLOR_SPACE color_space</definition>
        <argsstring></argsstring>
        <name>color_space</name>
        <initializer>= JCS_GRAYSCALE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" line="31" column="1" bodyfile="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="librawjpeg_8cpp_1a89717143fcd881e495a3afdb70763ab0" compoundref="librawjpeg_8cpp" startline="158" endline="197">convert_raw_jpeg</referencedby>
        <referencedby refid="classTemplateAFIS__webservice_1a32fefd35ad3d702984aa442f4407515d" compoundref="TemplateAFIS_8cpp" startline="92" endline="133">TemplateAFIS_webservice::convert_raw_jpeg</referencedby>
        <referencedby refid="librawjpeg_8cpp_1a0465dd33dca19c866b036b857dd1ccad" compoundref="librawjpeg_8cpp" startline="108" endline="147">write_jpeg_file</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="librawjpeg_8cpp_1a6389da5254621aa41a0ea72e8367a44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read_jpeg_file</definition>
        <argsstring>(string filename)</argsstring>
        <name>read_jpeg_file</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read_jpeg_file: Reads from a jpeg file on disk specified by filename and saves into the raw_image buffer in an uncompressed format.</para><para><simplesect kind="return"><para>positive integer if successful, -1 otherwise </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*filename</parametername>
</parameternamelist>
<parameterdescription>
<para>char string specifying the file name to read from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" line="43" column="1" bodyfile="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" bodystart="43" bodyend="96"/>
        <references refid="librawjpeg_8cpp_1aa0a06e9ee4ca87dd830202258e34ba63" compoundref="librawjpeg_8cpp" startline="25">raw_image</references>
      </memberdef>
      <memberdef kind="function" id="librawjpeg_8cpp_1a0465dd33dca19c866b036b857dd1ccad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int write_jpeg_file</definition>
        <argsstring>(string filename)</argsstring>
        <name>write_jpeg_file</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>write_jpeg_file: Writes the raw image data stored in the raw_image buffer to a jpeg image with default compression and smoothing options in the file specified by *filename.</para><para><simplesect kind="return"><para>positive integer if successful, -1 otherwise </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*filename</parametername>
</parameternamelist>
<parameterdescription>
<para>char string specifying the file name to save to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" line="108" column="1" bodyfile="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" bodystart="108" bodyend="147"/>
        <references refid="librawjpeg_8cpp_1ad1fad3c6fec2bf6f7d7933e68b4b0de5" compoundref="librawjpeg_8cpp" startline="30">bytes_per_pixel</references>
        <references refid="librawjpeg_8cpp_1a853aaff670a934d0e6fcf7ab4fda6c7c" compoundref="librawjpeg_8cpp" startline="31">color_space</references>
        <references refid="librawjpeg_8cpp_1ad12fc34ce789bce6c8a05d8a17138534" compoundref="librawjpeg_8cpp" startline="29">height</references>
        <references refid="librawjpeg_8cpp_1aa0a06e9ee4ca87dd830202258e34ba63" compoundref="librawjpeg_8cpp" startline="25">raw_image</references>
        <references refid="librawjpeg_8cpp_1a2474a5474cbff19523a51eb1de01cda4" compoundref="librawjpeg_8cpp" startline="28">width</references>
      </memberdef>
      <memberdef kind="function" id="librawjpeg_8cpp_1a89717143fcd881e495a3afdb70763ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int convert_raw_jpeg</definition>
        <argsstring>(string filename, unsigned char *raw, int nWidth, int nHeight)</argsstring>
        <name>convert_raw_jpeg</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>raw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>write_jpeg_file: Writes the raw image data stored in the raw_image buffer to a jpeg image with default compression and smoothing options in the file specified by *filename.</para><para><simplesect kind="return"><para>positive integer if successful, -1 otherwise </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*filename</parametername>
</parameternamelist>
<parameterdescription>
<para>char string specifying the file name to save to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" line="158" column="1" bodyfile="TemplateAFIS_webservice_lib/include/librawjpeg.cpp" bodystart="158" bodyend="197"/>
        <references refid="librawjpeg_8cpp_1ad1fad3c6fec2bf6f7d7933e68b4b0de5" compoundref="librawjpeg_8cpp" startline="30">bytes_per_pixel</references>
        <references refid="librawjpeg_8cpp_1a853aaff670a934d0e6fcf7ab4fda6c7c" compoundref="librawjpeg_8cpp" startline="31">color_space</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Métodos que permiten convertir de imágenes en formato RAW (crudo o nativo) a JPG. Incluye unos archivos de cabecera que se deben descargar para cada sistema de operación (jpeglib.h). El captahuellas Suprema captura en formatos en RAW y WSQ (formato del FBI). Se usa JPG para mostrarlo en la web. </para>    </briefdescription>
    <detaileddescription>
<para>OPTIMIZAR: Traducir</para><para><simplesect kind="date"><para>2014 This file is part of Sistema de Identificación Biométrica para las OBPP. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="15"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;jpeglib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>we<sp/>will<sp/>be<sp/>using<sp/>this<sp/>uninitialized<sp/>pointer<sp/>later<sp/>to<sp/>store<sp/>raw,<sp/>uncompressd<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="librawjpeg_8cpp_1aa0a06e9ee4ca87dd830202258e34ba63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="librawjpeg_8cpp_1aa0a06e9ee4ca87dd830202258e34ba63" kindref="member">raw_image</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dimensions<sp/>of<sp/>the<sp/>image<sp/>we<sp/>want<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="librawjpeg_8cpp_1a2474a5474cbff19523a51eb1de01cda4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="librawjpeg_8cpp_1a2474a5474cbff19523a51eb1de01cda4" kindref="member">width</ref><sp/>=<sp/>260;</highlight></codeline>
<codeline lineno="29" refid="librawjpeg_8cpp_1ad12fc34ce789bce6c8a05d8a17138534" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="librawjpeg_8cpp_1ad12fc34ce789bce6c8a05d8a17138534" kindref="member">height</ref><sp/>=<sp/>340;</highlight></codeline>
<codeline lineno="30" refid="librawjpeg_8cpp_1ad1fad3c6fec2bf6f7d7933e68b4b0de5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="librawjpeg_8cpp_1ad1fad3c6fec2bf6f7d7933e68b4b0de5" kindref="member">bytes_per_pixel</ref><sp/>=<sp/>1;</highlight><highlight class="comment">//3;<sp/><sp/><sp/>/*<sp/>or<sp/>1<sp/>for<sp/>GRACYSCALE<sp/>images<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="librawjpeg_8cpp_1a853aaff670a934d0e6fcf7ab4fda6c7c" refkind="member"><highlight class="normal">J_COLOR_SPACE<sp/><ref refid="librawjpeg_8cpp_1a853aaff670a934d0e6fcf7ab4fda6c7c" kindref="member">color_space</ref><sp/>=<sp/>JCS_GRAYSCALE;</highlight><highlight class="comment">//JCS_RGB;<sp/>/*<sp/>or<sp/>JCS_GRAYSCALE<sp/>for<sp/>grayscale<sp/>images<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="librawjpeg_8cpp_1a6389da5254621aa41a0ea72e8367a44d" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="librawjpeg_8cpp_1a6389da5254621aa41a0ea72e8367a44d" kindref="member">read_jpeg_file</ref>(<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename<sp/>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>these<sp/>are<sp/>standard<sp/>libjpeg<sp/>structures<sp/>for<sp/>reading(decompression)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">jpeg_decompress_struct<sp/>cinfo;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">jpeg_error_mgr<sp/>jerr;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>libjpeg<sp/>data<sp/>structure<sp/>for<sp/>storing<sp/>one<sp/>row,<sp/>that<sp/>is,<sp/>scanline<sp/>of<sp/>an<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>JSAMPROW<sp/>row_pointer[1];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*infile<sp/>=<sp/>fopen(<sp/>filename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>location<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!infile<sp/>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>jpeg<sp/>file<sp/>%s\n!&quot;</highlight><highlight class="normal">,<sp/>filename.c_str()<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>here<sp/>we<sp/>set<sp/>up<sp/>the<sp/>standard<sp/>libjpeg<sp/>error<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.err<sp/>=<sp/>jpeg_std_error(<sp/>&amp;jerr<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>decompression<sp/>process<sp/>and<sp/>source,<sp/>then<sp/>read<sp/>JPEG<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_create_decompress(<sp/>&amp;cinfo<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>makes<sp/>the<sp/>library<sp/>read<sp/>from<sp/>infile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_stdio_src(<sp/>&amp;cinfo,<sp/>infile<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reading<sp/>the<sp/>image<sp/>header<sp/>which<sp/>contains<sp/>image<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_read_header(<sp/>&amp;cinfo,<sp/>TRUE<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Uncomment<sp/>the<sp/>following<sp/>to<sp/>output<sp/>image<sp/>information,<sp/>if<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*--</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(<sp/>&quot;JPEG<sp/>File<sp/>Information:<sp/>\n&quot;<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(<sp/>&quot;Image<sp/>width<sp/>and<sp/>height:<sp/>%d<sp/>pixels<sp/>and<sp/>%d<sp/>pixels.\n&quot;,<sp/>cinfo.image_width,<sp/>cinfo.image_height<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(<sp/>&quot;Color<sp/>components<sp/>per<sp/>pixel:<sp/>%d.\n&quot;,<sp/>cinfo.num_components<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(<sp/>&quot;Color<sp/>space:<sp/>%d.\n&quot;,<sp/>cinfo.jpeg_color_space<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>--*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>decompression<sp/>jpeg<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_start_decompress(<sp/>&amp;cinfo<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>memory<sp/>to<sp/>hold<sp/>the<sp/>uncompressed<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="librawjpeg_8cpp_1aa0a06e9ee4ca87dd830202258e34ba63" kindref="member">raw_image</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<sp/>cinfo.output_width*cinfo.output_height*cinfo.num_components<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>actually<sp/>read<sp/>the<sp/>jpeg<sp/>into<sp/>the<sp/>raw<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>row_pointer[0]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(<sp/>cinfo.output_width*cinfo.num_components<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>one<sp/>scan<sp/>line<sp/>at<sp/>a<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>cinfo.output_scanline<sp/>&lt;<sp/>cinfo.image_height<sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jpeg_read_scanlines(<sp/>&amp;cinfo,<sp/>row_pointer,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;cinfo.image_width*cinfo.num_components;i++)<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="librawjpeg_8cpp_1aa0a06e9ee4ca87dd830202258e34ba63" kindref="member">raw_image</ref>[location++]<sp/>=<sp/>row_pointer[0][i];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wrap<sp/>up<sp/>decompression,<sp/>destroy<sp/>objects,<sp/>free<sp/>pointers<sp/>and<sp/>close<sp/>open<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_finish_decompress(<sp/>&amp;cinfo<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_destroy_decompress(<sp/>&amp;cinfo<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<sp/>row_pointer[0]<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<sp/>infile<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yup,<sp/>we<sp/>succeeded!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="librawjpeg_8cpp_1a0465dd33dca19c866b036b857dd1ccad" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="librawjpeg_8cpp_1a0465dd33dca19c866b036b857dd1ccad" kindref="member">write_jpeg_file</ref>(<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">jpeg_compress_struct<sp/>cinfo;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">jpeg_error_mgr<sp/>jerr;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>one<sp/>row<sp/>of<sp/>image<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>JSAMPROW<sp/>row_pointer[1];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*outfile<sp/>=<sp/>fopen(<sp/>filename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!outfile<sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>output<sp/>jpeg<sp/>file<sp/>%s\n!&quot;</highlight><highlight class="normal">,<sp/>filename.c_str()<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.err<sp/>=<sp/>jpeg_std_error(<sp/>&amp;jerr<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_create_compress(&amp;cinfo);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_stdio_dest(&amp;cinfo,<sp/>outfile);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Setting<sp/>the<sp/>parameters<sp/>of<sp/>the<sp/>output<sp/>file<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.image_width<sp/>=<sp/><ref refid="librawjpeg_8cpp_1a2474a5474cbff19523a51eb1de01cda4" kindref="member">width</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.image_height<sp/>=<sp/><ref refid="librawjpeg_8cpp_1ad12fc34ce789bce6c8a05d8a17138534" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.input_components<sp/>=<sp/><ref refid="librawjpeg_8cpp_1ad1fad3c6fec2bf6f7d7933e68b4b0de5" kindref="member">bytes_per_pixel</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.in_color_space<sp/>=<sp/><ref refid="librawjpeg_8cpp_1a853aaff670a934d0e6fcf7ab4fda6c7c" kindref="member">color_space</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>default<sp/>compression<sp/>parameters,<sp/>we<sp/>shouldn&apos;t<sp/>be<sp/>worried<sp/>about<sp/>these<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_set_defaults(<sp/>&amp;cinfo<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>do<sp/>the<sp/>compression<sp/>..<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_start_compress(<sp/>&amp;cinfo,<sp/>TRUE<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>like<sp/>reading<sp/>a<sp/>file,<sp/>this<sp/>time<sp/>write<sp/>one<sp/>row<sp/>at<sp/>a<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>cinfo.next_scanline<sp/>&lt;<sp/>cinfo.image_height<sp/>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_pointer[0]<sp/>=<sp/>&amp;<ref refid="librawjpeg_8cpp_1aa0a06e9ee4ca87dd830202258e34ba63" kindref="member">raw_image</ref>[<sp/>cinfo.next_scanline<sp/>*<sp/>cinfo.image_width<sp/>*<sp/><sp/>cinfo.input_components];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jpeg_write_scanlines(<sp/>&amp;cinfo,<sp/>row_pointer,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>similar<sp/>to<sp/>read<sp/>file,<sp/>clean<sp/>up<sp/>after<sp/>we&apos;re<sp/>done<sp/>compressing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_finish_compress(<sp/>&amp;cinfo<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_destroy_compress(<sp/>&amp;cinfo<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<sp/>outfile<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>success<sp/>code<sp/>is<sp/>1!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="librawjpeg_8cpp_1a89717143fcd881e495a3afdb70763ab0" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="librawjpeg_8cpp_1a89717143fcd881e495a3afdb70763ab0" kindref="member">convert_raw_jpeg</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*raw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">jpeg_compress_struct<sp/>cinfo;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">jpeg_error_mgr<sp/>jerr;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>one<sp/>row<sp/>of<sp/>image<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>JSAMPROW<sp/>row_pointer[1];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*outfile<sp/>=<sp/>fopen(<sp/>filename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!outfile<sp/>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>output<sp/>jpeg<sp/>file<sp/>%s\n!&quot;</highlight><highlight class="normal">,<sp/>filename.c_str()<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.err<sp/>=<sp/>jpeg_std_error(<sp/>&amp;jerr<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_create_compress(&amp;cinfo);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_stdio_dest(&amp;cinfo,<sp/>outfile);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Setting<sp/>the<sp/>parameters<sp/>of<sp/>the<sp/>output<sp/>file<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.image_width<sp/>=<sp/>nWidth;<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.image_height<sp/>=<sp/>nHeight;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.input_components<sp/>=<sp/><ref refid="librawjpeg_8cpp_1ad1fad3c6fec2bf6f7d7933e68b4b0de5" kindref="member">bytes_per_pixel</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.in_color_space<sp/>=<sp/><ref refid="librawjpeg_8cpp_1a853aaff670a934d0e6fcf7ab4fda6c7c" kindref="member">color_space</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>default<sp/>compression<sp/>parameters,<sp/>we<sp/>shouldn&apos;t<sp/>be<sp/>worried<sp/>about<sp/>these<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_set_defaults(<sp/>&amp;cinfo<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>do<sp/>the<sp/>compression<sp/>..<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_start_compress(<sp/>&amp;cinfo,<sp/>TRUE<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>like<sp/>reading<sp/>a<sp/>file,<sp/>this<sp/>time<sp/>write<sp/>one<sp/>row<sp/>at<sp/>a<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>cinfo.next_scanline<sp/>&lt;<sp/>cinfo.image_height<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_pointer[0]<sp/>=<sp/>&amp;raw[<sp/>cinfo.next_scanline<sp/>*<sp/>cinfo.image_width<sp/>*<sp/><sp/>cinfo.input_components];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jpeg_write_scanlines(<sp/>&amp;cinfo,<sp/>row_pointer,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>similar<sp/>to<sp/>read<sp/>file,<sp/>clean<sp/>up<sp/>after<sp/>we&apos;re<sp/>done<sp/>compressing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_finish_compress(<sp/>&amp;cinfo<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_destroy_compress(<sp/>&amp;cinfo<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<sp/>outfile<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>success<sp/>code<sp/>is<sp/>1!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">/*int<sp/>main()</highlight></codeline>
<codeline lineno="200"><highlight class="comment">{</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/>std::string<sp/>infilename,<sp/>outfilename;</highlight></codeline>
<codeline lineno="202"><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/>infilename<sp/>=<sp/>&quot;huella.jpg&quot;;</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/>outfilename<sp/>=<sp/>&quot;huella_out.jpg&quot;;</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/>raw_image<sp/>=<sp/>&quot;celis.raw&quot;;</highlight></codeline>
<codeline lineno="206"><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Try<sp/>opening<sp/>a<sp/>jpeg</highlight></codeline>
<codeline lineno="208"><highlight class="comment"></highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>read_jpeg_file(<sp/>infilename<sp/>)<sp/>&gt;<sp/>0<sp/>)<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert_raw_jpeg(<sp/>outfilename,<sp/>raw_image<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//then<sp/>copy<sp/>it<sp/>to<sp/>another<sp/>file<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//if(<sp/>write_jpeg_file(<sp/>outfilename<sp/>)<sp/>&lt;<sp/>0<sp/>)<sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/>convert_raw_jpeg(string<sp/>filename,<sp/>unsigned<sp/>char<sp/>*raw)</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/>else<sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="TemplateAFIS_webservice_lib/include/librawjpeg.cpp"/>
  </compounddef>
</doxygen>
